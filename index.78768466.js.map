{"mappings":"AAEA,MAAMA,EAAWC,SAASC,cAAc,oBAClCC,EAAiBF,SAASC,cAAc,qBACxCE,EAAuBH,SAASC,cAAc,4BAC9CG,EAAgBJ,SAASC,cAAc,2BACvCI,EAAUL,SAASC,cAAc,YAEvCG,EAAcE,QAAS,EACvBH,EAAqBG,QAAS,EAE9B,IAAIC,EAAS,KA8Eb,SAASC,EAAYC,IACXA,EAAEC,OAAOC,UAAUC,SAAS,iCAAmCH,EAAEC,OAAOC,UAAUC,SAAS,4BAA8BH,EAAEC,OAAOC,UAAUC,SAAS,qCAI3J,IAAIT,EAAqBU,UAAUC,SAAQC,GAAQA,EAAKJ,UAAUK,OAAO,YACzEP,EAAEC,OAAOO,QAAQ,iCAAiCN,UAAUO,IAAI,UAChEd,EAAce,IAAMV,EAAEC,OAAOO,QAAQ,iCAAiCG,QAAQC,IACpD,wEAAtBjB,EAAce,IACdf,EAAckB,MAAMC,OAAS,QAE7BnB,EAAckB,MAAMC,OAAS,Q,CAvFrCxB,EAASyB,iBAAiB,SAE1B,SAAyBf,GACrB,IAAKA,EAAEC,OAAOC,UAAUC,SAAS,mBAC7B,OAGJa,cAAclB,GACdA,EAAS,KAET,IAAIR,EAASc,UAAUC,SAAQC,GAAQA,EAAKJ,UAAUK,OAAO,YAC7D,IAAId,EAAeW,UAAUC,SAAQC,GAAQA,EAAKJ,UAAUK,OAAO,YACnEP,EAAEC,OAAOC,UAAUO,IAAI,UAEvB,IAAK,IAAIQ,EAAI,EAAGA,EAAI3B,EAASc,SAASc,OAAQD,IACtCjB,EAAEC,OAAOU,QAAQQ,OAAS1B,EAAeW,SAASa,GAAGN,QAAQQ,MAC7D1B,EAAeW,SAASa,GAAGf,UAAUO,IAAI,S,IAKrD,SAASW,IACL,IAAK,IAAIH,EAAI,EAAGA,GAAK3B,EAASc,SAASc,OAAQD,IAC3CnB,EAASuB,YAAW,KACZJ,IAAM3B,EAASc,SAASc,SACxBD,EAAI,EACJG,KAEJ,IAAI9B,EAASc,UAAUC,SAAQC,GAAQA,EAAKJ,UAAUK,OAAO,YAC7D,IAAId,EAAeW,UAAUC,SAAQC,GAAQA,EAAKJ,UAAUK,OAAO,YACnEjB,EAASc,SAASa,GAAGf,UAAUO,IAAI,UACnChB,EAAeW,SAASa,GAAGf,UAAUO,IAAI,UAClCX,IACJ,IAAJmB,E,CAIXG,GAGIxB,EAAQC,QAAS,ECrDrByB,eAA6BC,EAAOC,GAChC,MAGMC,QAAgBC,MAAM,6DAAqBH,YAAgBC,6CAEjE,IAAKC,EAAQE,GACT,MAAM,IAAIC,MAAMH,EAAQI,QAG5B,OAAOJ,EAAQK,M,CD6Cf,CAAc,EADKC,KAAKC,MAAsB,IAAhBD,KAAKE,WAE9BC,MAAKC,IACF,MAAMC,EAAaD,EAAOE,KAAKC,QAAQC,KAAI,EAACC,UAAEA,EAASrB,KAAEA,EAAIsB,YAAEA,KAuB3E,SAA4BD,EAAWrB,EAAMsB,GACzC,MAAO,+DACiDD,EAAUE,KAAO,IAAMF,EAAUG,8DAC5CxB,gEACOsB,GAA4B,+D,CA1B7DG,CAAmBJ,EAAWrB,EAAMsB,KAC5CI,KAAK,IAERjD,EAAQC,QAAS,EACjBH,EAAqBoD,UAAYV,EACjCzC,EAAcE,QAAS,EACvBH,EAAqBG,QAAS,EAE9BH,EAAqBU,SAAS,GAAGF,UAAUO,IAAI,UAC/Cd,EAAce,IAAMhB,EAAqBU,SAAS,GAAGO,QAAQC,IAEnC,wEAAtBjB,EAAce,MACdf,EAAckB,MAAMC,OAAS,SAGjCpB,EAAqBqB,iBAAiB,QAAShB,EAAY,IAE9DgD,OAAMC,GAASC,QAAQD,MAAMA","sources":["src/index.js","src/getResource.js"],"sourcesContent":["import { getCharacters } from \"./getResource\";\n\nconst heroList = document.querySelector('.hero__menu-list');\nconst heroCharacters = document.querySelector('.hero__characters');\nconst randomCharactersList = document.querySelector('.random-characters__list');\nconst randomCharImg = document.querySelector('.random-characters__img');\nconst loading = document.querySelector('.loading');\n\nrandomCharImg.hidden = true;\nrandomCharactersList.hidden = true;\n\nlet timer1 = null;\n\nheroList.addEventListener('click', heroListHandler);\n\nfunction heroListHandler(e) {\n    if (!e.target.classList.contains('hero__menu-item')) {\n        return;\n    }\n\n    clearInterval(timer1);\n    timer1 = null;\n\n    [...heroList.children].forEach(item => item.classList.remove('active'));\n    [...heroCharacters.children].forEach(item => item.classList.remove('active'));\n    e.target.classList.add('active');\n\n    for (let i = 0; i < heroList.children.length; i++) {\n        if (e.target.dataset.name === heroCharacters.children[i].dataset.name) {\n            heroCharacters.children[i].classList.add('active');\n        }\n    }\n}\n\nfunction changeHeroCharacter() {\n    for (let i = 0; i <= heroList.children.length; i++) {\n        timer1 = setTimeout(() => {\n            if (i === heroList.children.length) {\n                i = 0;\n                changeHeroCharacter();\n            }\n            [...heroList.children].forEach(item => item.classList.remove('active'));\n            [...heroCharacters.children].forEach(item => item.classList.remove('active'));\n            heroList.children[i].classList.add('active');\n            heroCharacters.children[i].classList.add('active');\n            return timer1;\n        }, i * 5000)\n    }\n}\n\nchangeHeroCharacter();\n\nfunction getRandomCharacters() {\n    loading.hidden = false;\n    let randomOffset = Math.floor(Math.random() * 300);\n    getCharacters(5, randomOffset)\n        .then(result => {\n            const characters = result.data.results.map(({ thumbnail, name, description }) => {\n                return createRandCharList(thumbnail, name, description);\n            }).join('');\n\n            loading.hidden = true;\n            randomCharactersList.innerHTML = characters;\n            randomCharImg.hidden = false;\n            randomCharactersList.hidden = false;\n\n            randomCharactersList.children[0].classList.add('active');\n            randomCharImg.src = randomCharactersList.children[0].dataset.img;\n\n            if (randomCharImg.src === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                randomCharImg.style.height = '400px';\n            }\n\n            randomCharactersList.addEventListener('click', onCharClick);\n        })\n        .catch(error => console.error(error));\n}\n\ngetRandomCharacters();\n\nfunction createRandCharList(thumbnail, name, description) {\n    return `\n        <li class=\"random-characters__list-item\" data-img=${thumbnail.path + '.' + thumbnail.extension}>\n            <p class=\"random-characters__name\">${name}</p>\n            <p class=\"random-characters__description\">${description ? description : 'No description for this character.'}</p>\n        </li>\n    `;\n}\n\nfunction onCharClick(e) {\n    if (!(e.target.classList.contains('random-characters__list-item') || e.target.classList.contains('random-characters__name') || e.target.classList.contains('random-characters__description'))) {\n        return;\n    }\n\n    [...randomCharactersList.children].forEach(item => item.classList.remove('active'));\n    e.target.closest('.random-characters__list-item').classList.add('active');\n    randomCharImg.src = e.target.closest('.random-characters__list-item').dataset.img;\n    if (randomCharImg.src === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        randomCharImg.style.height = '400px';\n    } else {\n        randomCharImg.style.height = '704px';\n    }\n}","async function getCharacters(limit, offset) {\n    const BASE_URL = 'https://gateway.marvel.com:443/v1/public/characters';\n    const API_PUBLIC_KEY = 'a85ca2e1a3f06b7ee3183f960e5fdc88';\n\n    const request = await fetch(`${BASE_URL}?limit=${limit}&offset=${offset}&apikey=${API_PUBLIC_KEY}`);\n    \n    if (!request.ok) {\n        throw new Error(request.status);\n    }\n\n    return request.json();\n}\n\nexport {getCharacters};"],"names":["$1f0dc3b9307be026$var$heroList","document","querySelector","$1f0dc3b9307be026$var$heroCharacters","$1f0dc3b9307be026$var$randomCharactersList","$1f0dc3b9307be026$var$randomCharImg","$1f0dc3b9307be026$var$loading","hidden","$1f0dc3b9307be026$var$timer1","$1f0dc3b9307be026$var$onCharClick","e","target","classList","contains","children","forEach","item","remove","closest","add","src","dataset","img","style","height","addEventListener","clearInterval","i","length","name","$1f0dc3b9307be026$var$changeHeroCharacter","setTimeout","async","limit","offset","request","fetch","ok","Error","status","json","Math","floor","random","then","result","characters","data","results","map","thumbnail","description","path","extension","$1f0dc3b9307be026$var$createRandCharList","join","innerHTML","catch","error","console"],"version":3,"file":"index.78768466.js.map"}