{"mappings":"AAEA,MAAMA,EAAWC,SAASC,cAAc,oBAClCC,EAAiBF,SAASC,cAAc,qBACxCE,EAAuBH,SAASC,cAAc,4BAC9CG,EAAgBJ,SAASC,cAAc,2BACvCI,EAAUL,SAASC,cAAc,YAEvCG,EAAcE,QAAS,EACvBH,EAAqBG,QAAS,EAE9B,IAAIC,EAAS,KA8Eb,SAASC,EAAYC,IACXA,EAAEC,OAAOC,UAAUC,SAAS,iCAAmCH,EAAEC,OAAOC,UAAUC,SAAS,4BAA8BH,EAAEC,OAAOC,UAAUC,SAAS,qCAI3J,IAAIT,EAAqBU,UAAUC,SAAQC,GAAQA,EAAKJ,UAAUK,OAAO,YACzEP,EAAEC,OAAOO,QAAQ,iCAAiCN,UAAUO,IAAI,UAChEd,EAAce,IAAMV,EAAEC,OAAOO,QAAQ,iCAAiCG,QAAQC,IACpD,wEAAtBjB,EAAce,IACdf,EAAckB,MAAMC,OAAS,QAE7BnB,EAAckB,MAAMC,OAAS,Q,CAvFrCxB,EAASyB,iBAAiB,SAE1B,SAAyBf,GACrB,IAAKA,EAAEC,OAAOC,UAAUC,SAAS,mBAC7B,OAGJ,IAAIb,EAASc,UAAUC,SAAQC,GAAQA,EAAKJ,UAAUK,OAAO,YAC7D,IAAId,EAAeW,UAAUC,SAAQC,GAAQA,EAAKJ,UAAUK,OAAO,YACnEP,EAAEC,OAAOC,UAAUO,IAAI,UAEvB,IAAK,IAAIO,EAAI,EAAGA,EAAI1B,EAASc,SAASa,OAAQD,IACtChB,EAAEC,OAAOU,QAAQO,OAASzB,EAAeW,SAASY,GAAGL,QAAQO,MAC7DzB,EAAeW,SAASY,GAAGd,UAAUO,IAAI,S,IAKrD,SAASU,IACL,IAAK,IAAIH,EAAI,EAAGA,GAAK1B,EAASc,SAASa,OAAQD,IAC3ClB,EAASsB,YAAW,KACZJ,IAAM1B,EAASc,SAASa,SACxBD,EAAI,EACJG,KAEJ,IAAI7B,EAASc,UAAUC,SAAQC,GAAQA,EAAKJ,UAAUK,OAAO,YAC7D,IAAId,EAAeW,UAAUC,SAAQC,GAAQA,EAAKJ,UAAUK,OAAO,YACnEjB,EAASc,SAASY,GAAGd,UAAUO,IAAI,UACnChB,EAAeW,SAASY,GAAGd,UAAUO,IAAI,UAClCX,IACJ,IAAJkB,E,CAIXG,GAGIvB,EAAQC,QAAS,EC/CrBwB,eAA6BC,EAAOC,GAEhC,MAAMC,QAAgBC,MAAM,6DAA+BH,YAAgBC,6CAE3E,IAAKC,EAAQE,GACT,MAAM,IAAIC,MAAMH,EAAQI,QAG5B,OAAOJ,EAAQK,M,CDyCf,CAAc,EADKC,KAAKC,MAAsB,IAAhBD,KAAKE,WAE9BC,MAAKC,IACF,MAAMC,EAAaD,EAAOE,KAAKC,QAAQC,KAAI,EAACC,UAAEA,EAASrB,KAAEA,EAAIsB,YAAEA,KA0B3E,SAA4BD,EAAWrB,EAAMsB,GACzC,MAAO,+DACiDD,EAAUE,KAAO,IAAMF,EAAUG,uBAAuBxB,sDACnEA,gEACOsB,GAA4B,+D,CA7B7DG,CAAmBJ,EAAWrB,EAAMsB,KAC5CI,KAAK,IAERhD,EAAQC,QAAS,EACjBH,EAAqBmD,UAAYV,EACjCxC,EAAcE,QAAS,EACvBH,EAAqBG,QAAS,EAE9BH,EAAqBU,SAAS,GAAGF,UAAUO,IAAI,UAC/Cd,EAAce,IAAMhB,EAAqBU,SAAS,GAAGO,QAAQC,IAC7DjB,EAAcmD,IAAMpD,EAAqBU,SAAS,GAAGO,QAAQO,KAEnC,wEAAtBvB,EAAce,IACdf,EAAckB,MAAMC,OAAS,QAE7BnB,EAAckB,MAAMC,OAAS,QAGjCpB,EAAqBqB,iBAAiB,QAAShB,EAAY,IAE9DgD,OAAMC,GAASC,QAAQD,MAAMA","sources":["src/index.js","src/getResource.js"],"sourcesContent":["import { getCharacters } from \"./getResource\";\n\nconst heroList = document.querySelector('.hero__menu-list');\nconst heroCharacters = document.querySelector('.hero__characters');\nconst randomCharactersList = document.querySelector('.random-characters__list');\nconst randomCharImg = document.querySelector('.random-characters__img');\nconst loading = document.querySelector('.loading');\n\nrandomCharImg.hidden = true;\nrandomCharactersList.hidden = true;\n\nlet timer1 = null;\n\nheroList.addEventListener('click', heroListHandler);\n\nfunction heroListHandler(e) {\n    if (!e.target.classList.contains('hero__menu-item')) {\n        return;\n    }\n\n    [...heroList.children].forEach(item => item.classList.remove('active'));\n    [...heroCharacters.children].forEach(item => item.classList.remove('active'));\n    e.target.classList.add('active');\n\n    for (let i = 0; i < heroList.children.length; i++) {\n        if (e.target.dataset.name === heroCharacters.children[i].dataset.name) {\n            heroCharacters.children[i].classList.add('active');\n        }\n    }\n}\n\nfunction changeHeroCharacter() {\n    for (let i = 0; i <= heroList.children.length; i++) {\n        timer1 = setTimeout(() => {\n            if (i === heroList.children.length) {\n                i = 0;\n                changeHeroCharacter();\n            }\n            [...heroList.children].forEach(item => item.classList.remove('active'));\n            [...heroCharacters.children].forEach(item => item.classList.remove('active'));\n            heroList.children[i].classList.add('active');\n            heroCharacters.children[i].classList.add('active');\n            return timer1;\n        }, i * 5000)\n    }\n}\n\nchangeHeroCharacter();\n\nfunction getRandomCharacters() {\n    loading.hidden = false;\n    let randomOffset = Math.floor(Math.random() * 300);\n    getCharacters(5, randomOffset)\n        .then(result => {\n            const characters = result.data.results.map(({ thumbnail, name, description }) => {\n                return createRandCharList(thumbnail, name, description);\n            }).join('');\n\n            loading.hidden = true;\n            randomCharactersList.innerHTML = characters;\n            randomCharImg.hidden = false;\n            randomCharactersList.hidden = false;\n\n            randomCharactersList.children[0].classList.add('active');\n            randomCharImg.src = randomCharactersList.children[0].dataset.img;\n            randomCharImg.alt = randomCharactersList.children[0].dataset.name;\n\n            if (randomCharImg.src === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                randomCharImg.style.height = '350px';\n            } else {\n                randomCharImg.style.height = '400px';\n            }\n\n            randomCharactersList.addEventListener('click', onCharClick);\n        })\n        .catch(error => console.error(error));\n}\n\ngetRandomCharacters();\n\nfunction createRandCharList(thumbnail, name, description) {\n    return `\n        <li class=\"random-characters__list-item\" data-img=${thumbnail.path + '.' + thumbnail.extension} data-name=${name}>\n            <p class=\"random-characters__name\">${name}</p>\n            <p class=\"random-characters__description\">${description ? description : 'No description for this character.'}</p>\n        </li>\n    `;\n}\n\nfunction onCharClick(e) {\n    if (!(e.target.classList.contains('random-characters__list-item') || e.target.classList.contains('random-characters__name') || e.target.classList.contains('random-characters__description'))) {\n        return;\n    }\n\n    [...randomCharactersList.children].forEach(item => item.classList.remove('active'));\n    e.target.closest('.random-characters__list-item').classList.add('active');\n    randomCharImg.src = e.target.closest('.random-characters__list-item').dataset.img;\n    if (randomCharImg.src === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        randomCharImg.style.height = '350px';\n    } else {\n        randomCharImg.style.height = '400px';\n    }\n}","const BASE_URL = 'https://gateway.marvel.com:443/v1/public/';\nconst API_PUBLIC_KEY = 'a85ca2e1a3f06b7ee3183f960e5fdc88';\n\nasync function getCharacters(limit, offset) {\n\n    const request = await fetch(`${BASE_URL}characters?limit=${limit}&offset=${offset}&apikey=${API_PUBLIC_KEY}`);\n\n    if (!request.ok) {\n        throw new Error(request.status);\n    }\n\n    return request.json();\n}\n\nasync function getCharactersBySearch(name, orderBy, limit, offset) {\n    const request = await fetch(`${BASE_URL}characters?nameStartsWith=${name}&orderBy=${orderBy}&limit=${limit}&offset=${offset}&apikey=${API_PUBLIC_KEY}`);\n\n    if (!request.ok) {\n        throw new Error(request.status);\n    }\n\n    return request.json();\n}\n\nasync function getCharacterById(id) {\n    const request = await fetch(`${BASE_URL}characters/${id}?apikey=${API_PUBLIC_KEY}`);\n\n    if (!request.ok) {\n        throw new Error(request.status);\n    }\n\n    return request.json();\n}\n\nasync function getComics(limit, offset) {\n    const request = await fetch(`${BASE_URL}comics?limit=${limit}&offset=${offset}&apikey=${API_PUBLIC_KEY}`);\n\n    if (!request.ok) {\n        throw new Error(request.status);\n    }\n\n    return request.json();\n}\n\nasync function getComicsBySearch(title, format, orderBy, limit, offset) {\n    const request = await fetch(`https://gateway.marvel.com:443/v1/public/comics?format=${format}&titleStartsWith=${title}&orderBy=${orderBy}&limit=${limit}&offset=${offset}&apikey=${API_PUBLIC_KEY}`);\n\n    if (!request.ok) {\n        throw new Error(request.status, request.statusText);\n    }\n\n    return request.json();\n}\n\nasync function getComicsById(id) {\n    const request = await fetch(`${BASE_URL}comics/${id}?apikey=${API_PUBLIC_KEY}`);\n\n    if (!request.ok) {\n        throw new Error(request.status);\n    }\n\n    return request.json();\n}\n\nexport { getCharacters, getCharactersBySearch, getCharacterById, getComics, getComicsBySearch, getComicsById };"],"names":["$1f0dc3b9307be026$var$heroList","document","querySelector","$1f0dc3b9307be026$var$heroCharacters","$1f0dc3b9307be026$var$randomCharactersList","$1f0dc3b9307be026$var$randomCharImg","$1f0dc3b9307be026$var$loading","hidden","$1f0dc3b9307be026$var$timer1","$1f0dc3b9307be026$var$onCharClick","e","target","classList","contains","children","forEach","item","remove","closest","add","src","dataset","img","style","height","addEventListener","i","length","name","$1f0dc3b9307be026$var$changeHeroCharacter","setTimeout","async","limit","offset","request","fetch","ok","Error","status","json","Math","floor","random","then","result","characters","data","results","map","thumbnail","description","path","extension","$1f0dc3b9307be026$var$createRandCharList","join","innerHTML","alt","catch","error","console"],"version":3,"file":"index.c8ee68b3.js.map"}